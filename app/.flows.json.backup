[
    {
        "id": "671265796388cccb",
        "type": "tab",
        "label": "source",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "258b1fca3e7e2415",
        "type": "tab",
        "label": "decode",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "6da3a61d65c18cea",
        "type": "tab",
        "label": "store",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "710f477a44faa728",
        "type": "tab",
        "label": "map",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "5195689fbf66dada",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#26a269",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "ADS-B Plane Spotter",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "28bdde5d389c0f33",
        "type": "debug",
        "z": "671265796388cccb",
        "name": "source",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 160,
        "wires": []
    },
    {
        "id": "446fc151487d9f43",
        "type": "comment",
        "z": "671265796388cccb",
        "name": "Select either the SDR dongle or a file to provide the raw ADS-B messages.",
        "info": "",
        "x": 280,
        "y": 40,
        "wires": []
    },
    {
        "id": "1af72ee336193169",
        "type": "function",
        "z": "671265796388cccb",
        "name": "trim",
        "func": "msg.payload = msg.payload.trim();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 260,
        "wires": [
            [
                "a4bb77a00dceda5d",
                "28bdde5d389c0f33",
                "e7221cb7cdacb5b7"
            ]
        ]
    },
    {
        "id": "e7221cb7cdacb5b7",
        "type": "link out",
        "z": "671265796388cccb",
        "name": "source out",
        "mode": "link",
        "links": [
            "e0b2c87d2c22bc3e"
        ],
        "x": 645,
        "y": 240,
        "wires": []
    },
    {
        "id": "b96061f6a699f94c",
        "type": "exec",
        "z": "671265796388cccb",
        "command": "rtl_adsb",
        "addpay": "",
        "append": "",
        "useSpawn": "true",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 280,
        "y": 140,
        "wires": [
            [
                "1af72ee336193169"
            ],
            [],
            []
        ]
    },
    {
        "id": "ccc0b06678938bd5",
        "type": "file in",
        "z": "671265796388cccb",
        "name": "read raw data file",
        "filename": "payload",
        "filenameType": "msg",
        "format": "lines",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 230,
        "y": 320,
        "wires": [
            [
                "1af72ee336193169"
            ]
        ]
    },
    {
        "id": "a4bb77a00dceda5d",
        "type": "function",
        "z": "671265796388cccb",
        "name": "total msg cnt",
        "func": "var count = context.get('n') || 0;\ncount++;\ncontext.set('n', count);\nreturn {topic:'metric/total-msg-cnt', payload: count};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 400,
        "wires": [
            [
                "741e11795aa36009"
            ]
        ]
    },
    {
        "id": "741e11795aa36009",
        "type": "link out",
        "z": "671265796388cccb",
        "name": "source out metrics",
        "mode": "link",
        "links": [],
        "x": 645,
        "y": 300,
        "wires": []
    },
    {
        "id": "a557e2094ee9badd",
        "type": "inject",
        "z": "671265796388cccb",
        "name": "start",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 90,
        "y": 100,
        "wires": [
            [
                "b96061f6a699f94c"
            ]
        ]
    },
    {
        "id": "82892d62a119bf06",
        "type": "inject",
        "z": "671265796388cccb",
        "name": "stop",
        "props": [
            {
                "p": "kill",
                "v": "true",
                "vt": "bool"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 90,
        "y": 180,
        "wires": [
            [
                "b96061f6a699f94c"
            ]
        ]
    },
    {
        "id": "e0b2c87d2c22bc3e",
        "type": "link in",
        "z": "258b1fca3e7e2415",
        "name": "decode in",
        "links": [
            "e7221cb7cdacb5b7"
        ],
        "x": 65,
        "y": 220,
        "wires": [
            [
                "f21becbd994fca3e"
            ]
        ]
    },
    {
        "id": "11c9b81aca5a3024",
        "type": "function",
        "z": "258b1fca3e7e2415",
        "name": "decode mode-s msg",
        "func": "const decoder = new modeSDecoder();\nmsg.payload = decoder.parse(msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "modeSDecoder",
                "module": "mode-s-decoder"
            }
        ],
        "x": 340,
        "y": 140,
        "wires": [
            [
                "a32d0daf59374b65",
                "77524dfb319b2763"
            ]
        ]
    },
    {
        "id": "5937530f00805773",
        "type": "link out",
        "z": "258b1fca3e7e2415",
        "name": "decode out",
        "mode": "link",
        "links": [
            "53326059ab6f32f0"
        ],
        "x": 615,
        "y": 160,
        "wires": []
    },
    {
        "id": "f6d263cbbb6b79e4",
        "type": "function",
        "z": "258b1fca3e7e2415",
        "name": "decode msg count",
        "func": "var count = context.get('n') || 0;\ncount++;\ncontext.set('n', count);\nreturn { topic: 'metric/decode-msg-cnt', payload: count };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 260,
        "wires": [
            [
                "1986145c08fccd2e"
            ]
        ]
    },
    {
        "id": "f21becbd994fca3e",
        "type": "function",
        "z": "258b1fca3e7e2415",
        "name": "-> buffer",
        "func": "msg.payload = msg.payload.replace(/[^0-9a-fA-F]/g,'');\nmsg.payload = hexArray.fromString(msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "hexArray",
                "module": "hex-array"
            }
        ],
        "x": 140,
        "y": 100,
        "wires": [
            [
                "11c9b81aca5a3024"
            ]
        ]
    },
    {
        "id": "a32d0daf59374b65",
        "type": "switch",
        "z": "258b1fca3e7e2415",
        "name": "check crc",
        "property": "payload.crcOk",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 270,
        "y": 240,
        "wires": [
            [
                "5937530f00805773",
                "f6d263cbbb6b79e4"
            ],
            [
                "8482d06c437a501b"
            ]
        ]
    },
    {
        "id": "1986145c08fccd2e",
        "type": "link out",
        "z": "258b1fca3e7e2415",
        "name": "decode out metric",
        "mode": "link",
        "links": [],
        "x": 675,
        "y": 300,
        "wires": []
    },
    {
        "id": "8482d06c437a501b",
        "type": "function",
        "z": "258b1fca3e7e2415",
        "name": "decode err count",
        "func": "var count = context.get('n') || 0;\ncount++;\ncontext.set('n', count);\nreturn { topic: 'metric/decode-err-cnt', payload: count };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 340,
        "wires": [
            [
                "1986145c08fccd2e"
            ]
        ]
    },
    {
        "id": "1878d21e792614b7",
        "type": "comment",
        "z": "258b1fca3e7e2415",
        "name": "decode mode-s messages",
        "info": "",
        "x": 130,
        "y": 40,
        "wires": []
    },
    {
        "id": "77524dfb319b2763",
        "type": "debug",
        "z": "258b1fca3e7e2415",
        "name": "decode",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 600,
        "y": 80,
        "wires": []
    },
    {
        "id": "c320232d6f4e65ba",
        "type": "function",
        "z": "6da3a61d65c18cea",
        "name": "store mode-s message",
        "func": "const store = context.get('store') || new modeSAircraftStore({ ttimeout: 120000 });\nstore.addMessage(msg.payload);\ncontext.set('store', store);\n\nmsg.payload = store.getAircrafts();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "modeSAircraftStore",
                "module": "mode-s-aircraft-store"
            }
        ],
        "x": 220,
        "y": 120,
        "wires": [
            [
                "7414e495a0727518",
                "764dd5b1f331d4f6"
            ]
        ]
    },
    {
        "id": "53326059ab6f32f0",
        "type": "link in",
        "z": "6da3a61d65c18cea",
        "name": "store in",
        "links": [
            "5937530f00805773"
        ],
        "x": 95,
        "y": 200,
        "wires": [
            [
                "c320232d6f4e65ba"
            ]
        ]
    },
    {
        "id": "7414e495a0727518",
        "type": "function",
        "z": "6da3a61d65c18cea",
        "name": "aircraft db size",
        "func": "msg.topic = \"metric/aircraft-db-size\";\nmsg.payload = msg.payload.length;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 320,
        "wires": [
            [
                "8620df5a1314021e"
            ]
        ]
    },
    {
        "id": "764dd5b1f331d4f6",
        "type": "split",
        "z": "6da3a61d65c18cea",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 450,
        "y": 160,
        "wires": [
            [
                "ceae6a9de7f5f0eb",
                "e5155c2c650f2b06"
            ]
        ]
    },
    {
        "id": "ceae6a9de7f5f0eb",
        "type": "link out",
        "z": "6da3a61d65c18cea",
        "name": "store out",
        "mode": "link",
        "links": [
            "3ae6211922f7134f"
        ],
        "x": 605,
        "y": 200,
        "wires": []
    },
    {
        "id": "8620df5a1314021e",
        "type": "link out",
        "z": "6da3a61d65c18cea",
        "name": "store out metric",
        "mode": "link",
        "links": [],
        "x": 605,
        "y": 300,
        "wires": []
    },
    {
        "id": "85c8d548ea3bee1e",
        "type": "comment",
        "z": "6da3a61d65c18cea",
        "name": "collect and store information about the aircraft",
        "info": "",
        "x": 190,
        "y": 40,
        "wires": []
    },
    {
        "id": "e5155c2c650f2b06",
        "type": "debug",
        "z": "6da3a61d65c18cea",
        "name": "store",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 80,
        "wires": []
    },
    {
        "id": "3ae6211922f7134f",
        "type": "link in",
        "z": "710f477a44faa728",
        "name": "display in",
        "links": [
            "ceae6a9de7f5f0eb"
        ],
        "x": 155,
        "y": 100,
        "wires": [
            [
                "be01aeb580340311"
            ]
        ]
    },
    {
        "id": "cd5581187ae307dc",
        "type": "function",
        "z": "710f477a44faa728",
        "name": "-> aircraft object",
        "func": "\nreturn {\n topic: 'aircraft record',\n payload: {\n        layer: 'aircracft',\n        name: msg.payload.callsign,\n        lat: msg.payload.lat,\n        lon: msg.payload.lng,\n        heading: msg.payload.heading,\n        icon: 'plane'\n    }\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 100,
        "wires": [
            [
                "53f27d3bd77eead0",
                "c0fad167ebdb37d3",
                "28165994e8ba1279"
            ]
        ]
    },
    {
        "id": "53f27d3bd77eead0",
        "type": "debug",
        "z": "710f477a44faa728",
        "name": "map",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 590,
        "y": 80,
        "wires": []
    },
    {
        "id": "be01aeb580340311",
        "type": "function",
        "z": "710f477a44faa728",
        "name": "filter incomplete records",
        "func": "\nreturn msg.payload.callsign && msg.payload.lat && msg.payload.lng\n    ? msg \n    : null;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 220,
        "wires": [
            [
                "cd5581187ae307dc"
            ]
        ]
    },
    {
        "id": "bd08034bf1935712",
        "type": "comment",
        "z": "710f477a44faa728",
        "name": "create mappable objects",
        "info": "",
        "x": 150,
        "y": 40,
        "wires": []
    },
    {
        "id": "c0fad167ebdb37d3",
        "type": "link out",
        "z": "710f477a44faa728",
        "name": "generate out",
        "mode": "link",
        "links": [],
        "x": 555,
        "y": 260,
        "wires": []
    },
    {
        "id": "28165994e8ba1279",
        "type": "worldmap",
        "z": "710f477a44faa728",
        "name": "",
        "lat": "39.83",
        "lon": "-98.58",
        "zoom": "4",
        "layer": "OSMC",
        "cluster": "5",
        "maxage": "120",
        "usermenu": "hide",
        "layers": "show",
        "panit": "false",
        "panlock": "false",
        "zoomlock": "false",
        "hiderightclick": "true",
        "coords": "none",
        "showgrid": "false",
        "showruler": "false",
        "allowFileDrop": "false",
        "path": "/worldmap",
        "overlist": "DR,SN,AC,HM",
        "maplist": "OSMC",
        "mapname": "",
        "mapurl": "",
        "mapopt": "",
        "mapwms": false,
        "x": 600,
        "y": 140,
        "wires": []
    }
]